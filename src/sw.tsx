/// <reference lib="webworker" />
import { skipWaiting, clientsClaim } from "workbox-core";
import { precacheAndRoute } from "workbox-precaching";
import { registerRoute } from "workbox-routing";
import {
  CacheFirst,
  NetworkFirst,
  StaleWhileRevalidate,
} from "workbox-strategies";
import { CacheableResponsePlugin } from "workbox-cacheable-response";

declare const self: ServiceWorkerGlobalScope;

// Precache the assets generated by Vite
precacheAndRoute(self.__WB_MANIFEST);

// Skip the waiting phase
skipWaiting();

// Claim the clients
clientsClaim();

// Use cache first strategy for static assets
registerRoute(
  ({ request }) =>
    request.destination === "style" || request.destination === "script",
  new CacheFirst()
);

// Use network first strategy for dynamic content
registerRoute(
  ({ request }) => request.destination === "document",
  new NetworkFirst()
);

// Use stale-while-revalidate strategy for API requests to OMDb
registerRoute(
  ({ url }) => url.origin === "http://www.omdbapi.com",
  new StaleWhileRevalidate({
    plugins: [
      new CacheableResponsePlugin({
        statuses: [200], // Only cache valid responses
      }),
    ],
  })
);
self.addEventListener("fetch", (event) => {
  event.respondWith(
    caches.match(event.request).then((response) => {
      return (
        response ||
        fetch(event.request).catch(() => {
          // Handle fetch errors
          return new Response("Network unavailable, using cached content.");
        })
      );
    })
  );
});
