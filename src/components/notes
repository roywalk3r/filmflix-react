// serch Fuctin tha shows result based on inpput
// import { useState, useEffect } from "react";
// import "./searchMovie.css";
// import MovieApiService from "../movieApiService/movieApiService";
// import { Link } from "react-router-dom";

// function SearchMovie() {
//   const [searchQuery, setSearchQuery] = useState("");
//   const [searchResults, setSearchResults] = useState([]);

//   useEffect(() => {
//     const fetchSearchResults = async () => {
//       try {
//         // Call the getSearchMovie method from MovieApiService
//         const response = await MovieApiService.getSearchMovie({
//           movieName: searchQuery,
//         });

//         // Handle the response data
//         // console.log(response, "search result");
//         setSearchResults(response.data.results);
//       } catch (error) {
//         // Handle errors
//         console.error(error);
//       }
//     };

//     // Call the fetchSearchResults function when the searchQuery changes
//     if (searchQuery.trim() !== "") {
//       fetchSearchResults();
//     } else {
//       // Reset search results when the search query is empty
//       setSearchResults([]);
//     }
//   }, [searchQuery]);

//   const handleInputChange = (e: any) => {
//     setSearchQuery(e.target.value);
//   };

//   return (
//     <>
//       <div className="search-container">
//         <div className="center">
//           <div className="search_movie_box">
//             <input
//               type="search"
//               id="search-input"
//               placeholder="Search movie"
//               value={searchQuery}
//               onChange={handleInputChange}
//             />
//             <i className="bx bx-search" id="search-icon"></i>
//           </div>
//         </div>
//         {searchResults.length > 0 && (
//           <div className="movies-content">
//             {searchResults.map((item: any) => (
//               //   <div key={item.id} className="search-result-item">
//               //     <h3>{item.title}</h3>
//               //     <div className="result-item">
//               //       <div className="result-image">
//               //         <img
//               //           src={`https://image.tmdb.org/t/p/original/${item.poster_path}`}
//               //         />
//               //       </div>
//               //     </div>
//               //   </div>
//               <div className="movie-box">
//                 <img
//                   src={`https://image.tmdb.org/t/p/original/${item.poster_path}`}
//                   alt={`Poster for ${item.original_title}`}
//                   className="movie-box-img"
//                   loading="lazy"
//                 />
//                 <div className="box-text">
//                   <h2 className="movie-title">{item.original_title}</h2>
//                   <span className="movie-type">
//                     {new Date(item.release_date).toLocaleDateString("en-US", {
//                       year: "numeric",
//                       month: "short",
//                       day: "numeric", // or "2-digit" for two-digit day representation
//                     })}
//                   </span>

//                   <Link
//                     to={`/movie/${item.id}`}
//                     key={item.id}
//                     className="watch-btn play-btn"
//                   >
//                     <i className="bx bx-right-arrow"></i>
//                   </Link>
//                 </div>
//               </div>
//             ))}
//           </div>
//         )}
//       </div>
//     </>
//   );
// }

// export default SearchMovie;

// Genre List
// {
//     "genres": [
//       {
//         "id": 28,
//         "name": "Action"
//       },
//       {
//         "id": 12,
//         "name": "Adventure"
//       },
//       {
//         "id": 16,
//         "name": "Animation"
//       },
//       {
//         "id": 35,
//         "name": "Comedy"
//       },
//       {
//         "id": 80,
//         "name": "Crime"
//       },
//       {
//         "id": 99,
//         "name": "Documentary"
//       },
//       {
//         "id": 18,
//         "name": "Drama"
//       },
//       {
//         "id": 10751,
//         "name": "Family"
//       },
//       {
//         "id": 14,
//         "name": "Fantasy"
//       },
//       {
//         "id": 36,
//         "name": "History"
//       },
//       {
//         "id": 27,
//         "name": "Horror"
//       },
//       {
//         "id": 10402,
//         "name": "Music"
//       },
//       {
//         "id": 9648,
//         "name": "Mystery"
//       },
//       {
//         "id": 10749,
//         "name": "Romance"
//       },
//       {
//         "id": 878,
//         "name": "Science Fiction"
//       },
//       {
//         "id": 10770,
//         "name": "TV Movie"
//       },
//       {
//         "id": 53,
//         "name": "Thriller"
//       },
//       {
//         "id": 10752,
//         "name": "War"
//       },
//       {
//         "id": 37,
//         "name": "Western"
//       }
//     ]
//   }

//fetch SeSONS
// {tvShowDetailsResult.seasons &&
//     tvShowDetailsResult.seasons.length > 0 && (
//       <div>
//         <h2>Seasons:</h2>
//         <ul>
//           {tvShowDetailsResult.seasons.map((season:any) => (
//             <li key={season.id}>
//               <h3>{season.name}</h3>
//               <p>Air Date: {season.air_date}</p>
//               <p>Episode Count: {season.episode_count}</p>
//               <p>Overview: {season.overview}</p>
//               {/* Add more details as needed */}
//             </li>
//           ))}
//         </ul>
//       </div>
//     )}

// Moveiss
// Append data to existing one
// const handleGenreChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
//   const selectedGenreId = parseInt(event.target.value);
//   setSelectedGenre(selectedGenreId !== 0 ? selectedGenreId : null);
//   // You can add additional logic here if needed
// };
