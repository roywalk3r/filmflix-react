// serch Fucti0n tha shows result based on inpput
// import { useState, useEffect } from "react";
// import "./searchMovie.css";
// import MovieApiService from "../movieApiService/movieApiService";
// import { Link } from "react-router-dom";

// function SearchMovie() {
//   const [searchQuery, setSearchQuery] = useState("");
//   const [searchResults, setSearchResults] = useState([]);

//   useEffect(() => {
//     const fetchSearchResults = async () => {
//       try {
//         // Call the getSearchMovie method from MovieApiService
//         const response = await MovieApiService.getSearchMovie({
//           movieName: searchQuery,
//         });

//         // Handle the response data
//         // console.log(response, "search result");
//         setSearchResults(response.data.results);
//       } catch (error) {
//         // Handle errors
//         console.error(error);
//       }
//     };

//     // Call the fetchSearchResults function when the searchQuery changes
//     if (searchQuery.trim() !== "") {
//       fetchSearchResults();
//     } else {
//       // Reset search results when the search query is empty
//       setSearchResults([]);
//     }
//   }, [searchQuery]);

//   const handleInputChange = (e: any) => {
//     setSearchQuery(e.target.value);
//   };

//   return (
//     <>
//       <div className="search-container">
//         <div className="center">
//           <div className="search_movie_box">
//             <input
//               type="search"
//               id="search-input"
//               placeholder="Search movie"
//               value={searchQuery}
//               onChange={handleInputChange}
//             />
//             <i className="bx bx-search" id="search-icon"></i>
//           </div>
//         </div>
//         {searchResults.length > 0 && (
//           <div className="movies-content">
//             {searchResults.map((item: any) => (
//               //   <div key={item.id} className="search-result-item">
//               //     <h3>{item.title}</h3>
//               //     <div className="result-item">
//               //       <div className="result-image">
//               //         <img
//               //           src={`https://image.tmdb.org/t/p/original/${item.poster_path}`}
//               //         />
//               //       </div>
//               //     </div>
//               //   </div>
//               <div className="movie-box">
//                 <img
//                   src={`https://image.tmdb.org/t/p/original/${item.poster_path}`}
//                   alt={`Poster for ${item.original_title}`}
//                   className="movie-box-img"
//                   loading="lazy"
//                 />
//                 <div className="box-text">
//                   <h2 className="movie-title">{item.original_title}</h2>
//                   <span className="movie-type">
//                     {new Date(item.release_date).toLocaleDateString("en-US", {
//                       year: "numeric",
//                       month: "short",
//                       day: "numeric", // or "2-digit" for two-digit day representation
//                     })}
//                   </span>

//                   <Link
//                     to={`/movie/${item.id}`}
//                     key={item.id}
//                     className="watch-btn play-btn"
//                   >
//                     <i className="bx bx-right-arrow"></i>
//                   </Link>
//                 </div>
//               </div>
//             ))}
//           </div>
//         )}
//       </div>
//     </>
//   );
// }

// export default SearchMovie;

// Genre List
// {
//     "genres": [
//       {
//         "id": 28,
//         "name": "Action"
//       },
//       {
//         "id": 12,
//         "name": "Adventure"
//       },
//       {
//         "id": 16,
//         "name": "Animation"
//       },
//       {
//         "id": 35,
//         "name": "Comedy"
//       },
//       {
//         "id": 80,
//         "name": "Crime"
//       },
//       {
//         "id": 99,
//         "name": "Documentary"
//       },
//       {
//         "id": 18,
//         "name": "Drama"
//       },
//       {
//         "id": 10751,
//         "name": "Family"
//       },
//       {
//         "id": 14,
//         "name": "Fantasy"
//       },
//       {
//         "id": 36,
//         "name": "History"
//       },
//       {
//         "id": 27,
//         "name": "Horror"
//       },
//       {
//         "id": 10402,
//         "name": "Music"
//       },
//       {
//         "id": 9648,
//         "name": "Mystery"
//       },
//       {
//         "id": 10749,
//         "name": "Romance"
//       },
//       {
//         "id": 878,
//         "name": "Science Fiction"
//       },
//       {
//         "id": 10770,
//         "name": "TV Movie"
//       },
//       {
//         "id": 53,
//         "name": "Thriller"
//       },
//       {
//         "id": 10752,
//         "name": "War"
//       },
//       {
//         "id": 37,
//         "name": "Western"
//       }
//     ]
//   }

//fetch SeaSONS
// {tvShowDetailsResult.seasons &&
//     tvShowDetailsResult.seasons.length > 0 && (
//       <div>
//         <h2>Seasons:</h2>
//         <ul>
//           {tvShowDetailsResult.seasons.map((season:any) => (
//             <li key={season.id}>
//               <h3>{season.name}</h3>
//               <p>Air Date: {season.air_date}</p>
//               <p>Episode Count: {season.episode_count}</p>
//               <p>Overview: {season.overview}</p>
//               {/* Add more details as needed */}
//             </li>
//           ))}
//         </ul>
//       </div>
//     )}

// Moveiss
// Append data to existing one
// const handleGenreChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
//   const selectedGenreId = parseInt(event.target.value);
//   setSelectedGenre(selectedGenreId !== 0 ? selectedGenreId : null);
// };

//Api Resquest
// MovieApiService.ts
//import axios, { AxiosResponse } from "axios";

// const baseurl = "https://api.themoviedb.org/3";
// const apiKey = "ee49cfa0ba7290f7125021125f5d7c57";

// class MovieApiService {
//   static apiKey = apiKey;

// Fetch movies API data
// static moviesApiData(page: any, genreId: number | null = null): Promise<AxiosResponse<any>> {
//     let apiUrl = `${baseurl}/discover/movie?include_adult=false&include_video=false&language=en-US&page=${page}&sort_by=popularity.desc&api_key=${apiKey}`;

//     // If a genre is selected, add it to the API URL
//     if (genreId !== null) {
//       apiUrl += `&with_genres=${genreId}`;
//     }

//     return axios.get(apiUrl);
//   }

// Fetch genres
//   static fetchGenres(): Promise<AxiosResponse<any>> {
//     return axios.get(`${baseurl}/genre/movie/list?api_key=${apiKey}&language=en-US`);
//   }

// Fetch kids movies
//   static fetchKidsMovies(page: any): Promise<AxiosResponse<any>> {
//     return axios.get(
//       `${baseurl}/discover/movie?api_key=${apiKey}&with_genres=16&include_video=false&language=en-US&page=${page}&sort_by=popularity.desc`
//     );
//   }

// Banner API data
//   static async bannerApiData(): Promise<AxiosResponse<any>> {
//     const url = `${baseurl}/trending/all/week?api_key=${apiKey}`;
//     return MovieApiService.makeRequest(url);
//   }

// Trending movie API data
//   static async trendingMovieApiData(): Promise<AxiosResponse<any>> {
//     const url = `${baseurl}/trending/movie/day?api_key=${apiKey}`;
//     return MovieApiService.makeRequest(url);
//   }

// Popular movie API data
//   static async popularMovieApiData(): Promise<AxiosResponse<any>> {
//     const url = `${baseurl}/trending/movie/week?api_key=${apiKey}`;
//     return MovieApiService.makeRequest(url);
//   }

// Search for movies (multi)
//   static async getSearchMovie(data: { movieName: any }): Promise<AxiosResponse<any>> {
//     const url = `${baseurl}/search/multi?api_key=${apiKey}&query=${data.movieName}`;
//     return MovieApiService.makeRequest(url);
//   }

// Get movie details
//   static async getMovieDetails(data: any): Promise<AxiosResponse<any>> {
//     const url = `${baseurl}/movie/${data}?api_key=${apiKey}`;
//     return MovieApiService.makeRequest(url);
//   }

// Get backdrop image
//   static async getBackdropImage(data: any): Promise<AxiosResponse<any>> {
//     const url = `${baseurl}/movie/${data}?api_key=${apiKey}`;
//     return MovieApiService.makeRequest(url);
//   }

// Get movie video
//   static async getMovieVideo(data: string): Promise<AxiosResponse<string>> {
//     const url = `${baseurl}/movie/${data}/videos?api_key=${apiKey}`;
//     return MovieApiService.makeRequest(url);
//   }

// Get movie cast
//   static async getMovieCast(movieId: number): Promise<AxiosResponse<number>> {
//     const url = `${baseurl}/movie/${movieId}/credits?api_key=${apiKey}`;
//     return MovieApiService.makeRequest(url);
//   }

// Add more methods based on your requirements...

// Generic function to make requests and handle errors
// private static async makeRequest(url: string): Promise<AxiosResponse<any>> {
//     try {
//       const response = await axios.get(url);
//       return response;
//     } catch (error) {
//       console.error("Error making request:", error);
//       throw error;
//     }
//   }
// }

// export default MovieApiService;
